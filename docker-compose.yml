version: '3.4'

services:
  client-service:
    image: online-schop/client-service:latest
    build:
      context: .
      dockerfile: OnlineSchop.ClientService/Dockerfile
    ports:
      - "5001-5002:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=db;Database=ClientDb;Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=${RABBITMQ_USER}
      - RabbitMQ__Password=${RABBITMQ_PASS}
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - shop-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    deploy:
      mode: replicated
      replicas: 2
      endpoint_mode: dnsrr

  order-service:
    image: online-schop/order-service:latest
    build:
      context: .
      dockerfile: OnlineSchop.OrderService/Dockerfile
    ports:
      - "6001-6002:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=db;Database=OrderDb;Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=${RABBITMQ_USER}
      - RabbitMQ__Password=${RABBITMQ_PASS}
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - shop-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    deploy:
      mode: replicated
      replicas: 2
      endpoint_mode: dnsrr
    
  rabbitmq:
    image: rabbitmq:3-management
    container_name: shop-rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"   # RabbitMQ default port
      - "15672:15672" # Management UI
      - "15692:15692" # Prometheus metrics
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/var/log/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
      - RABBITMQ_ERLANG_COOKIE=${RABBITMQ_COOKIE}
    networks:
      - shop-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  db:
    image: postgres:16-alpine
    container_name: shop-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=master
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
      - ./init-scripts/postgres:/docker-entrypoint-initdb.d
    networks:
      - shop-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 1GB
        reservations:
          memory: 512M
    shm_size: 128mb

volumes:
  postgres_data:
  rabbitmq_data:
  rabbitmq_logs:
  sqlserver_data:

networks:
  shop-network:
    driver: bridge